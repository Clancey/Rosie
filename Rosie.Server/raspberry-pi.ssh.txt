
#SSH Debug Script file
# Minimum requirement: Edit the 'Host' below, and make sure your remote ssh host has mono installed, and sshd.

# This file is executed sequentially, prior to debugging.
# To execute console commands, use the prefix:
#   '<' or '&<' for local synchronous or asynchronous operation.
#   '>' or '&>' for remote synchronous or asynchronous operation.
#   's>' for synchronous shell input/output.
#
#	[exe-file]	 =  output .exe filename
#   [exe-path]   =  path to output .exe
# 	[mdb-path]   =  path to output .exe.mdb
#	[build-path] =  path to output
#	[work-dir]	 =  remote working dir

# Remember: you may want to add this file to your repository ignore file. (*.xft.ssh)

Name = Raspberry Pi
Host = pi@10.0.1.145
WorkingDir = ~/Rosie

TerminalFont Monospace 10
TerminalRows 30
TerminalCols 120
TerminalEmulation xterm

LocalTunnelPort 8000
RemoteTunnelPort 12345

#Copy executable & debug file to remote.
scp-copy $[exe-path] $[mdb-path]

# scp-sync, copys additional build directory file (e.g .dlls that may be needed)
scp-sync

StartTunnel

#Start remote application, with debug listener.
s>mono --debug --debugger-agent=transport=dt_socket,address=localhost:$[RemoteTunnelPort],server=y,suspend=y $[exe-file]

#Allow time for remote debugger to initialise (in milliseconds)
sleep 150

